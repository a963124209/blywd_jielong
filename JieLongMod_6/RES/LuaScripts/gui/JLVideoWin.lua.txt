require("gui/WindowUtils")

---* 此处写视频地址
local VideoPrefabPath = "Assets/BuildSource/video/LYCG.prefab"
---* 此处写提示文本的游戏内文字Key
local ToastText = GetGameString("cus_video_player_tips_1")

local global = {
	curDbClickedItem = nil
}

local curClickItemTimer = 0
local doubleClickTime = 0.2
local timerTickInterval = 0.05


---* 视频播放页面初始化
function onInit()
	local contentPane = self.contentPane
	---* 通用关闭按钮
	---@type FairyGUI.GButton
	if contentPane:GetChild("frame") then
		local frame = contentPane:GetChild("frame").asCom
		if frame:GetChild("closeButton") then
			frame.onClick:Add(onClickClose)
			local buttonClose = frame:GetChild("closeButton").asButton
			buttonClose.onClick:Add(onClickExit)
			global.buttonClose = buttonClose
		end
	elseif contentPane:GetChild("closeButton") then
		local buttonClose = contentPane:GetChild("closeButton").asButton
		buttonClose.onClick:Add(onClickExit)
		global.buttonClose = buttonClose
	end
	self:SetCloseButton(global.buttonClose)
	
	global.loader = contentPane:GetChild("Video").asLoader
	global.loader.onClick:Add(onClickClose)

	---* 隐藏提示文本
	if contentPane:GetChild("n4") then
		local txtTips = contentPane:GetChild("n4")
		txtTips.visible = false
	end

	---* 通过传递的界面参数获取视频地址
    local videoPathArg = self:GetWindowArgVal("video_path");
    if videoPathArg ~= nil and videoPathArg ~= "" then
        VideoPrefabPath = videoPathArg
    end
    local exitTimeArg = self:GetWindowArgVal("exit_time");
    if tonumber(exitTimeArg) ~= nil  then
		--"200"为时间,单位秒
		CS.FairyGUI.Timers.inst:Add(tonumber(exitTimeArg), 0, onClickExit)
    end
	print("加载视频: " .. VideoPrefabPath)
	global.obj = CS.HanSquirrel.ResourceManager.ResourceLoader.Spawn(VideoPrefabPath)
	global.player = global.obj:GetComponent("VideoPlayer");
	global.rawImage  = global.obj:GetComponent("RawImage");
	
	-- 修复会导致公共的空材质销毁的问题
	-- global.NTexture = CS.FairyGUI.NTexture.Empty
	-- global.NTexture:Reload(global.rawImage.texture)
	global.NTexture = CS.FairyGUI.NTexture(global.rawImage.texture)
	global.loader.image.texture = global.NTexture

	CS.FairyGUI.Timers.inst:Add(timerTickInterval, 0, onTimerTickUpdate)

	global.contentPane = contentPane
end

function onClickExit()
	CS.FairyGUI.Timers.inst:Remove(onClickExit);--移除计时器
	CS.FairyGUI.Timers.inst:Remove(onTimerTickUpdate);--移除计时器
	if global.obj ~= nil then
		CS.UnityEngine.GameObject.Destroy(global.obj)
	end
	self:Hide()
end

function onClickPlay()
	
end

--按下完成按钮时
function onClickClose(context)
	local tagObj = context.data
	if IsDoubleClick(tagObj) then
		--双击操作
		onClickExit()
		global.curDbClickedItem = nil
	else
		global.curDbClickedItem = tagObj
		curClickItemTimer = 0
		ShowToastInfo(ToastText, 1)
	end
end

function onTimerTickUpdate()
	if global.curDbClickedItem ~= nil then
		--判断双击时间
		if curClickItemTimer < doubleClickTime then
			curClickItemTimer = curClickItemTimer + timerTickInterval
		else
			global.curDbClickedItem = nil
		end
	end
end

function IsDoubleClick(tagObj)
	if global.curDbClickedItem == tagObj then
		return true
	end
	return false
end